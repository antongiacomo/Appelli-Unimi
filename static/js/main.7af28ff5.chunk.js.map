{"version":3,"sources":["Block.js","App.js","serviceWorker.js","index.js"],"names":["Block","item","chiusura","weigth","moment","diff","className","style","maxHeight","appelli","map","appello","data","format","fill","viewBox","fill-rule","d","clip-rule","chiusuraStr","idAppello","App","useState","setData","title","setTitle","useStorageState","localStorage","filter","setFilter","clear","filterOnly","atitle","set","result","element","descrIns","toLowerCase","includes","docente","nome","cognome","some","useEffect","config","headers","a","axios","fetchData","placeholder","onChange","event","target","value","split","onKeyPress","key","Set","f","data-value","onClick","e","dataset","sort","b","top","left","rel","href","trim","replace","xmlns","codW4","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7af28ff5.chunk.js","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\n\nfunction Block({ item }) {\n  function chiusura(chiusura) {\n    var weigth = \"500 border-b-2 pb-0\";\n    chiusura = moment().diff(chiusura, \"days\");\n\n    if (chiusura >= -2 && chiusura <= 0) return \"border-yellow-\" + weigth;\n    if (chiusura > 0) return \"border-red-\" + weigth;\n    return \"border-green-\" + weigth;\n  }\n\n  return (\n    <div\n      className=\"flex flex-wrap overflow-y-scroll\"\n      style={{ maxHeight: \"300px\" }}\n    >\n      {item.appelli.map((appello) => (\n        <div\n          key={appello.idAppello}\n          className=\"w-full bg-gray-200 mr-1 my-1 p-2 rounded-lg hover:shadow-md hover:translate-x-1\"\n        >\n          <div\n            className={\n              moment().diff(appello.chiusura, \"days\") > 0\n                ? \"opacity-50\"\n                : \"opacity-100\"\n            }\n          >\n            <p>\n              <span className=\"font-medium\">Appello: </span>\n              {moment(appello.data).format(\"DD/M\")}\n\n              <span className=\"text-sm\">\n                 ({moment().diff(appello.data, \"days\")} giorni)\n              </span>\n            </p>\n          </div>\n          <p>\n            <div className=\"flex items-center\">\n              <span className=\"font-medium\">Chiusura:</span>\n              {moment().diff(appello.chiusura, \"days\") === 0 && (\n                <svg\n                  fill=\"currentColor\"\n                  className=\"h-4 w-4 text-red-600\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path\n                    fill-rule=\"evenodd\"\n                    d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n                    clip-rule=\"evenodd\"\n                  ></path>\n                </svg>\n              )}\n\n              <span className={chiusura(appello.chiusura) + \" p-1\"}>\n                {appello.chiusuraStr}({moment().diff(appello.chiusura, \"days\")}{\" \"}\n                giorni)\n              </span>\n            </div>\n          </p>\n        </div>\n      ))}\n    </div>\n  );\n}\nexport default Block;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./tailwind.generated.css\";\nimport { useStorageState } from 'react-storage-hooks';\nimport Block from \"./Block\";\n//import Corsi from \"./corsi.json\"\n//import Select from 'react-select'\n//\nfunction App() {\n  const [data, setData] = useState([]);\n  const [title, setTitle] = useState([\"\"]);\n  const [filter, setFilter] = useStorageState(\n    localStorage,\n    'filters',\n    []\n  );\n\n  useEffect(() => {\n    var config = {\n      headers: { \"Access-Control-Allow-Origin\": \"*\" },\n    };\n\n    const fetchData = async () => {\n      const result = await axios(\n        \"https://gallant-chandrasekhar-55ebf7.netlify.app/.netlify/functions/unimi-fetch\",\n        config\n      );\n\n      setData(result.data);\n    };\n\n    fetchData();\n  }, []);\n\n  function clear(item,filterOnly = false) {\n    var atitle = filterOnly ? [] : title\n    var set = [...atitle, ...filter];\n\n    var result = set.map((element) => {\n      return (\n        item.descrIns.toLowerCase().includes(element) ||\n        item.appelli[0].docente.nome.toLowerCase().includes(element) ||\n        item.appelli[0].docente.cognome.toLowerCase().includes(element)\n      );\n    });\n\n    return result.some((item) => item);\n  }\n\n  return (\n    <div className=\"\">\n      <div className=\"w-full px-8 py-6 sticky bg-white z-50 bg-white top-0\">\n\n        <input\n        placeholder=\"Search...\"\n          className=\"w-full  h-full border py-2 px-4 rounded-lg shadow bg-white\"\n          onChange={(event) =>\n            setTitle(event.target.value.toLowerCase().split(\"&\"))\n          }\n          value={title}\n          onKeyPress={(event) => {\n            if (event.key === \"Enter\") {\n              setFilter([...(new Set([...filter, event.target.value.toLowerCase()]))]);\n              setTitle([\"\"]);\n            }\n          }}\n        />\n         {/* <Select options={Corsi} /> */}\n      </div>\n      <div>\n\n      </div>\n      <div className=\"flex px-8 flex-wrap space-x-2\">\n        {filter.map((f) => {\n          return (\n            <span key={f} className=\"rounded-full py-2 px-4 my-2 bg-gray-300 hover:shadow-md hover:translate-x-1\">\n              {f}{\" \"}\n              <span\n                className=\"ml-1 border cursor-pointer\"\n                data-value={f}\n                onClick={(event) =>\n                  setFilter(\n                    filter.filter((e) => e !== event.target.dataset.value)\n                  )\n                }\n              >\n                âœ˜\n              </span>\n            </span>\n          );\n        })}\n      </div>\n\n      <div className=\"flex flex-wrap p-4\">\n        {data\n          .filter((item) => clear(item))\n          .sort((a, b) => false - clear(a,true))\n          .map((item) => {\n            return (\n              <div\n                className=\"lg:w-1/4 md:w-1/3 sm:w-1/2 w-full p-4 relative\"\n                key={item.codW4}\n\n              >\n\n                <div className=\"relative border w-full h-full p-4 rounded-lg shadow overflow-hidden z-40\">\n\n                 { clear(item,true) && <div className=\"absolute bg-indigo-600 w-6 h-8 z-30 transform rotate-45\" style={{ top: '-0.75rem' , left: '-0.75rem'}}></div>}\n\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"float-right\"\n                    href={\n                      \"https://www.unimi.it/it/corsi/insegnamenti-dei-corsi-di-laurea/2021/\" +\n                      item.descrIns.toLowerCase().trim().replace(/ /g, \"-\")\n                    }\n                  >\n                    <svg\n                      className=\"w-6 h-6\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 1792 1792\"\n                    >\n                      <defs />\n                      <path d=\"M1408 928V448q0-26-19-45t-45-19H864q-42 0-59 39-17 41 14 70l144 144-534 534q-19 19-19 45t19 45l102 102q19 19 45 19t45-19l534-534 144 144q18 19 45 19 12 0 25-5 39-17 39-59zm256-512v960q0 119-84 204t-204 84H416q-119 0-203-84t-85-204V416q0-119 85-203t203-85h960q119 0 204 85t84 203z\" />\n                    </svg>\n                  </a>\n\n                  <p className=\"font-medium text-lg mb-1 cursor-pointer hover:underline\" onClick={ () => setFilter([...(new Set([...filter, item.descrIns.toLowerCase()]))])}>{item.descrIns}</p>\n                  <p className=\"text-sm mb-5\">\n                    {item.appelli[0].docente.nome}{\" \"}\n                    {item.appelli[0].docente.cognome}\n                  </p>\n                  <Block item={item ?? []}></Block>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}